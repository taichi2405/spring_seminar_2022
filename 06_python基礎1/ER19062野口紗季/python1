{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Python基礎1.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "#課題1\n",
        "tanh関数をグラフにする"
      ],
      "metadata": {
        "id": "R95QlJ_b6LJQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def tanh(x):\n",
        "    exp_x1 = np.exp(x)\n",
        "    exp_x2 = np.exp(-x)\n",
        "    upper = exp_x1 - exp_x2\n",
        "    lower = exp_x1 + exp_x2\n",
        "    return upper/lower\n",
        "\n",
        "x = np.arange(-5.0, 5.0, 0.1)\n",
        "y= tanh(x)\n",
        "\n",
        "plt.plot(x,y)\n",
        "plt.ylim(-1.2, 1.2)\n",
        "\n",
        "plt.title('tanh')\n",
        "plt.xlabel('input')\n",
        "plt.ylabel('output')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "eaDZANQF1IBh",
        "outputId": "fcd532d1-d452-4b1d-eda6-be72252447d9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#課題2\n",
        "3つの活性化関数をまとめて表示"
      ],
      "metadata": {
        "id": "vysNHDDf6V68"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def sigmoid(x):\n",
        "    return 1/(1+np.exp(-x))\n",
        "\n",
        "def softmax(x):\n",
        "    exp_x = np.exp(x)\n",
        "    sum_exp_x = np.sum(exp_x)\n",
        "    return exp_x/sum_exp_x\n",
        "\n",
        "def tanh(x):\n",
        "    exp_x1 = np.exp(x)\n",
        "    exp_x2 = np.exp(-x)\n",
        "    upper = exp_x1 - exp_x2\n",
        "    lower = exp_x1 + exp_x2\n",
        "    return upper/lower\n",
        "\n",
        "x = np.arange(-5.0, 5.0, 0.1)\n",
        "y1 = sigmoid(x)\n",
        "y2 = softmax(x)\n",
        "y3= tanh(x)\n",
        "\n",
        "plt.plot(x,y1)\n",
        "plt.plot(x,y2)\n",
        "plt.plot(x,y3)\n",
        "\n",
        "plt.ylim(-1.2, 1.2)\n",
        "\n",
        "plt.plot(x, y1, label='sigmoid')\n",
        "plt.plot(x, y2, label='softmax')\n",
        "plt.plot(x, y3, label='tanh')\n",
        "\n",
        "plt.xlabel('input')\n",
        "plt.ylabel('output')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "JkXbv12d0vSL",
        "outputId": "6d6177ee-2f09-4365-8475-6d9ffacd0246"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##課題３\n",
        "\n",
        "元画像の1/2サイズのBGR画像\n"
      ],
      "metadata": {
        "id": "nEm1ciUukaYA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import cv2\n",
        "\n",
        "img = cv2.imread(\"lenna.jpg\") #画像の読み込み(BGR)\n",
        "img1 = cv2.resize(img, dsize=None, fx=0.5, fy=0.5)#画像のサイズを0.5倍に\n",
        "plt.imshow(img1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        },
        "id": "bEw0UfO2aN_-",
        "outputId": "b78f5bc4-e61d-45ae-b3c3-72aff736f9af"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "error",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31merror\u001b[0m                                     Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-3-bff604eba3e1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mimg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"lenna.jpg\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m#画像の読み込み(BGR)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mimg1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m#画像のサイズを0.5倍に\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31merror\u001b[0m: OpenCV(4.1.2) /io/opencv/modules/imgproc/src/resize.cpp:3720: error: (-215:Assertion failed) !ssize.empty() in function 'resize'\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##課題4\n",
        "\n",
        "ゼルダのトライフォースを作成\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "C7CveA9_mPJ-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#黒の単色画像を作成\n",
        "import cv2\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import math\n",
        "\n",
        "height = 200\n",
        "width = 300\n",
        "blank = np.zeros((height, width, 3))#すべて0の行列を作成\n",
        "\n",
        "\n",
        "#a = 100\n",
        "#height = a*4\n",
        "#width = a*8\n",
        "#blank = np.zeros((height, width, 3))#すべて0の行列を作成\n",
        " \n",
        "cv2.imwrite('blank.png',blank) #画像を保存\n",
        "img = cv2.imread(\"blank.png\", 1)#黒の単色画像読み込み\n",
        "plt.imshow(img)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "id": "2x8PiJ27mO4u",
        "outputId": "2413935d-06f2-49be-d645-1400e9577569"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.image.AxesImage at 0x7fc2327e6f10>"
            ]
          },
          "metadata": {},
          "execution_count": 25
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#作成した黒の単色画像にトライフォースを作成\n",
        "pts1 = np.array([(150,15),(50, 188),(250,188)])#黄色の三角形の座標\n",
        "pts2 = np.array([(100,100),(150,188),(200,100)])#黒色の三角形の座標 \n",
        "\n",
        "cv2.fillConvexPoly(img, pts1, color=(255,255,0)) #黄色の三角形を表示\n",
        "cv2.fillConvexPoly(img, pts2, color=(0,0,0)) #黒色の三角形を表示\n",
        "plt.imshow(img)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "id": "Usd8ktXm_Heb",
        "outputId": "b0929461-8282-4412-d787-9ab07a58c231"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.image.AxesImage at 0x7fc2327df710>"
            ]
          },
          "metadata": {},
          "execution_count": 26
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}
