#課題2
import numpy as np
import matplotlib.pyplot as plt

def sigmoid(x):
    return 1/(1+np.exp(-x))

def softmax(x):
    exp_x=np.exp(x)
    sum_exp_x=np.sum(exp_x)
    return exp_x/sum_exp_x

def tanh(x):
    return (np.exp(x) - np.exp(-x)) / (np.exp(x) + np.exp(-x))

x=np.arange(-5.0,5.0,0.1)

plt.ylim(-1.2,1.2)
y=softmax(x)
y1=sigmoid(x)
y2=tanh(x)

plt.plot(x,y,label="softmax")
plt.plot(x,y1,label="sigmoid")
plt.plot(x,y2,label="tanh")
plt.legend()
plt.xlabel("input")
plt.ylabel("output")
plt.show()

#課題4
import cv2
import numpy as np
import matplotlib.pyplot as plt


img = np.zeros((500, 500, 3), np.uint8)
a=np.sqrt(3)

c_x = int(img.shape[1]/2)
c_y = int(img.shape[0]/2)

pts1 = np.array(([c_x,c_y - 100],[c_x - 100, c_y + 100],[c_x + 100, c_y + 100]))
pts2 = np.array(([c_x, c_y + 100],[c_x + 60,c_y],[c_x - 60, c_y]))
cv2.fillConvexPoly(img,pts1,(255, 212, 0))
cv2.fillConvexPoly(img,pts2,(0,0,0))

plt.imshow(img)
cv2.waitKey(0)
cv2.destroyAllWindows()